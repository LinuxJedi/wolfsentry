# Makefile
#
# Copyright (C) 2021 wolfSSL Inc.
#
# This file is part of wolfSentry.
#
# wolfSentry is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# wolfSentry is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1335, USA


SRCS = util.c internal.c routes.c events.c actions.c

DEBUG=-ggdb

OPTIM=-O3

CFLAGS=-I. $(OPTIM) $(DEBUG) -MMD -Wall -Wextra -Werror -Wformat=2 -Winit-self -Wmissing-include-dirs -Wunknown-pragmas -Wshadow -Wpointer-arith -Wcast-align -Wwrite-strings -Wconversion -Wstrict-prototypes -Wold-style-definition -Wmissing-declarations -Wmissing-format-attribute -Wpointer-arith -Woverlength-strings -Wredundant-decls -Winline -Winvalid-pch -Wdouble-promotion -Wvla -Wno-missing-field-initializers -Wno-bad-function-cast $(EXTRA_CFLAGS)

CC_IS_GCC:=$(shell if $(CC) -v 2>&1 | grep -q -i 'gcc version'; then echo 1; else echo 0; fi)

ifdef USER_SETTINGS_FILE
    CFLAGS+=-DWOLFSENTRY_USER_SETTINGS_FILE=\"$(USER_SETTINGS_FILE)\"
endif

ifeq "$(CC_IS_GCC)" "1"
    CFLAGS+=-Wjump-misses-init -Wlogical-op
endif

ifeq "$(SINGLETHREADED)" "1"
    CFLAGS+=-DWOLFSENTRY_SINGLETHREADED
endif

ifneq "$(SINGLETHREADED)" "1"
    LDFLAGS+=-pthread
endif

ifeq "$(STATIC)" "1"
    LDFLAGS+=-static
endif

ifeq "$(STRIPPED)" "1"
    DEBUG=
    CFLAGS+=-ffunction-sections -fdata-sections
    LDFLAGS+=-Wl,--gc-sections -Wl,--strip-all
endif

.PHONY: all

LIB_NAME=libwolfsentry.a

INSTALL_LIBS=$(LIB_NAME)

INSTALL_HEADERS=wolfsentry/wolfsentry.h wolfsentry/wolfsentry_errcodes.h

all: $(LIB_NAME)

.c.o:
	$(CC) $(CFLAGS) -c $< -o $@

libwolfsentry.a: $(addprefix src/,$(SRCS:.c=.o))
	$(AR) crs $@ $+

UNITTEST_LIST=test_init test_rwlocks test_static_routes test_dynamic_rules

$(addprefix tests/,$(UNITTEST_LIST)): UNITTEST_GATE=-D$(shell basename '$@' | tr '[:lower:]' '[:upper:]')
$(addprefix tests/,$(UNITTEST_LIST)): tests/unittests.c libwolfsentry.a
	$(CC) $(CFLAGS) $(UNITTEST_GATE) $(LDFLAGS) -o $@ $+

.PHONY: test
test: $(addprefix tests/,$(UNITTEST_LIST))
	@for test in $(basename $(UNITTEST_LIST)); do echo "$${test}:"; $(VALGRIND) "./tests/$$test"; exitcode=$$?; if [ $$exitcode != 0 ]; then break; fi; echo "$${test} succeeded"; echo; done; if [ "$$exitcode" = 0 ]; then echo 'all tests succeeded.'; else exit $$exitcode; fi

.PHONY: valgrind
valgrind: VALGRIND=valgrind --leak-check=full --error-exitcode=10
valgrind: test

ifndef INSTALL_DIR
    INSTALL_DIR=/usr/local
endif

ifndef INSTALL_LIBDIR
    INSTALL_LIBDIR=$(INSTALL_DIR)/lib
endif

ifndef INSTALL_INCDIR
    INSTALL_INCDIR=$(INSTALL_DIR)/include
endif

.PHONY: install
install: all
	@mkdir -p $(INSTALL_LIBDIR)
	install -p -m 0644 $(LIB_NAME) $(INSTALL_LIBDIR)
	@mkdir -p $(INSTALL_INCDIR)/wolfsentry
	install -p -m 0644 $(INSTALL_HEADERS) $(INSTALL_INCDIR)/wolfsentry

.PHONY: uninstall
uninstall:
	$(RM) $(INSTALL_LIBDIR)/$(LIB_NAME) $(addprefix $(INSTALL_INCDIR)/,$(INSTALL_HEADERS))
	@rmdir $(INSTALL_LIBDIR) $(INSTALL_INCDIR)/wolfsentry $(INSTALL_INCDIR) 2>/dev/null || exit 0

.PHONY: dist
dist:
	tar --gzip -cf wolfsentry.tgz README.md Makefile.minimal wolfsentry/ src/wolfsentry_internal.h $(addprefix src/,$(SRCS)) tests/unittests.c

.PHONY: clean
clean:
	rm -f $(addprefix src/,$(SRCS:.c=.o)) $(addprefix src/,$(SRCS:.c=.d)) libwolfsentry.a $(addprefix tests/,$(UNITTEST_LIST))

-include $(addprefix src/,$(SRCS:.c=.d))
